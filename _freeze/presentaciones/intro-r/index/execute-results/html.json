{
  "hash": "a4747f2023b6dbf71f9aa59ed30cb794",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducción a R\"\n# date: 2025-06-02\nbibliography: references.bib\ncsl: apa.csl\n---\n\n\n::: {.cell}\n<style type=\"text/css\">\ncode.sourceCode {\n  font-size: 150%;\n  /* or try font-size: xx-large; */\n}\n</style>\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n\n::: {.cell}\n\n:::\n\n\n## Proposito 1\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](index_files/figure-revealjs/figura-proposito-1.png){fig-alt='Un diagrama de dispersión de la masa corporal frente a la longitud de la aleta de los pingüinos, con una línea de mejor ajuste de la relación entre estas dos variables superpuesta. El gráfico muestra una relación positiva, bastante lineal y relativamente fuerte entre estas dos variables. Las especies (Adelia, Barbijo y Papúa) se representan con diferentes colores y la relación entre la masa corporal y la longitud de la aleta es aproximadamente la misma para estas tres especies, y los pingüinos Papúa son #| más grandes que los pingüinos de las otras dos especies.' width=960}\n:::\n:::\n\n\n## Proposito 2\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-8c91932c{table-layout:auto;width:100%;}.cl-8afb582c{font-family:'Times New Roman';font-size:18pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-8afb585e{font-family:'Atkinson Hyperlegible';font-size:18pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-8afb5868{font-family:'Atkinson Hyperlegible';font-size:18pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-8c8b616e{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 2;background-color:transparent;}.cl-8c8b7d66{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d70{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d71{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d7a{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d7b{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d84{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d85{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d86{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d8e{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d8f{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d90{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d98{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7d99{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7da2{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7da3{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7da4{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dac{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dad{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dae{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7daf{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7db6{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7db7{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7db8{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dc0{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dc1{background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dc2{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dca{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dcb{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dd4{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-8c8b7dd5{background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-8c91932c'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-8c8b7d66\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb582c\">Especie</span></p></th><th class=\"cl-8c8b7d70\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb582c\">Isla</span></p></th><th class=\"cl-8c8b7d71\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb582c\">Sexo</span></p></th><th class=\"cl-8c8b7d7a\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb582c\">n</span></p></th><th class=\"cl-8c8b7d7b\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb582c\">Porcentaje (%)</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"8\"class=\"cl-8c8b7d84\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb585e\">Adelie</span></p></td><td  rowspan=\"2\"class=\"cl-8c8b7d85\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Biscoe</span></p></td><td class=\"cl-8c8b7d86\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Hembra</span></p></td><td class=\"cl-8c8b7d8e\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">22</span></p></td><td class=\"cl-8c8b7d8f\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7d86\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Macho</span></p></td><td class=\"cl-8c8b7d8e\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">22</span></p></td><td class=\"cl-8c8b7d8f\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-8c8b7d85\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Dream</span></p></td><td class=\"cl-8c8b7d86\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Hembra</span></p></td><td class=\"cl-8c8b7d8e\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">27</span></p></td><td class=\"cl-8c8b7d8f\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">48.21</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7d86\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Macho</span></p></td><td class=\"cl-8c8b7d8e\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">28</span></p></td><td class=\"cl-8c8b7d8f\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7d99\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">NA</span></p></td><td class=\"cl-8c8b7da2\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">1</span></p></td><td class=\"cl-8c8b7da3\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">1.79</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-8c8b7dac\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Torgersen</span></p></td><td class=\"cl-8c8b7dad\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Hembra</span></p></td><td class=\"cl-8c8b7dae\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">24</span></p></td><td class=\"cl-8c8b7daf\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">46.15</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7dad\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Macho</span></p></td><td class=\"cl-8c8b7dae\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">23</span></p></td><td class=\"cl-8c8b7daf\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">44.23</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7dad\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">NA</span></p></td><td class=\"cl-8c8b7dae\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">5</span></p></td><td class=\"cl-8c8b7daf\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">9.62</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"2\"class=\"cl-8c8b7db6\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb585e\">Chinstrap</span></p></td><td  rowspan=\"2\"class=\"cl-8c8b7db7\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Dream</span></p></td><td class=\"cl-8c8b7db8\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Hembra</span></p></td><td class=\"cl-8c8b7dc0\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">34</span></p></td><td class=\"cl-8c8b7dc1\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7db8\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Macho</span></p></td><td class=\"cl-8c8b7dc0\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">34</span></p></td><td class=\"cl-8c8b7dc1\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-8c8b7dc2\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb585e\">Gentoo</span></p></td><td  rowspan=\"3\"class=\"cl-8c8b7dca\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Biscoe</span></p></td><td class=\"cl-8c8b7d86\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Hembra</span></p></td><td class=\"cl-8c8b7d8e\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">58</span></p></td><td class=\"cl-8c8b7d8f\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">46.77</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7d86\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">Macho</span></p></td><td class=\"cl-8c8b7d8e\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">61</span></p></td><td class=\"cl-8c8b7d8f\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">49.19</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-8c8b7dcb\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">NA</span></p></td><td class=\"cl-8c8b7dd4\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">5</span></p></td><td class=\"cl-8c8b7dd5\"><p class=\"cl-8c8b616e\"><span class=\"cl-8afb5868\">4.03</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n## Qué es R\n\n::: columns\n::: {.column .fragment fragment-index=\"1\" width=\"40%\"}\n> R es un sistema para computación estadística y gráficos. Consiste en un lenguaje más un entorno de ejecución con gráficos, un depurador, acceso a ciertas funciones del sistema y la capacidad de ejecutar programas almacenados en archivos de script. @rmanual\n\n![](images/logo_r.png){fig-align=\"center\" width=\"400\"}\n:::\n\n::: {.column .incremental width=\"60%\"}\n-   **Lenguaje**: R es un lenguaje de programación, con sintaxis y funciones propias.\n-   **Entorno de ejecución**: R proporciona un entorno en el que se pueden ejecutar programas escritos en R.\n-   **Gráficos**: R incluye capacidades avanzadas para la creación de gráficos.\n-   **Depurador**: R incluye herramientas para encontrar y corregir errores en sus scripts.\n-   **Acceso a funciones del sistema**: R puede interactuar con el sistema operativo.\n-   **Programas en scripts**: se pueden escribir programas y guardarlos en archivos de texto con extensión .R (scripts).\n:::\n:::\n\n## Historia\n\n![Algunos hitos importantes en la historia de R. Modificado de @giorgi2022.](images/timeline_r.png){fig-align=\"center\"}\n\n## Nuestros guías\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n![R for data science de @wickham2023a. Disponible en [r4ds.hadley.nz/](https://r4ds.hadley.nz/)](images/r4ds.jpg){#r4ds fig-align=\"center\" width=\"381\"}\n:::\n\n::: {.column .fragment width=\"50%\"}\n![Quizá la persona más importante en el ecosistema R.](images/meme_hadley-wickham.jpg){#meme_wickham fig-align=\"center\"}\n:::\n:::\n\n## Flujo de trabajo en ciencias de datos\n\n![En este modelo, todo comienza con la importación y limpieza de los datos. Seguido de un ciclo iterativo de transformación, visualización y modelado. Finalmente, termina con comunicar. Tomado de @wickham2023a.](images/data-science.png){#data-science-1 fig-align=\"center\" width=\"600\"}\n\n## Programar es como llevar un buen matrimonio\n\n::: fragment\n![¡Ya cómete la maldita naranja!](images/meme_comete-naranja.jpeg){fig-align=\"center\"}\n:::\n\n## Recordemos donde estamos\n\n![[Apariencia por defecto de RStudio.](https://docs.posit.co/ide/user/ide/get-started/)](images/rstudio_ide.jpeg){fig-align=\"center\"}\n\n## Ejecutar código\n\nEjecutar código en la consola de R es muy sencillo. Sólo tienes que escribirlo al lado de símbolo de mayor que `>` y presionar `enter` para ejecutarlo. En la consola de R, el signo `>` se conoce como **prompt**, mientras que el código que escribes se llama un comando.\n\n::: {.fragment}\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> 4 + 2\n[1] 6\n> 4 * 2\n[1] 8\n> 4 / 2\n[1] 2\n> 4**2\n[1] 16\n```\n:::\n\n::: {.fragment}\nEl número que aparece entre corchetes `[]` informa que esta línea comienza con ese valor del resultado. Algunos comandos devuelven más de un valor y sus resultados pueden ocupar múltiples líneas. Estos números se pueden ignorara en la mayoría de los casos.\n\nLos símbolos `+`, suma; `-`, resta; `*`, multiplicación; `/`, división; `**` o `^`, exponencial; son algunos de operadores matemáticos que tiene R.\n:::\n\n## Otros operadores\n\n::: {.fragment}\nEl operador dos puntos `:` devuelve todos los enteros entre dos enteros. Es una forma fácil de crear una secuencia de números.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> 4:2\n[1] 4 3 2\n```\n:::\n\n::: {.fragment}\nLos operadores de comparación son: `==` igual `!=` no igual, `>` mayor que, `<` menor que, `>=` mayor o igual que, `<=` menor o igual que.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> 4 == 2\n[1] FALSE\n> 4 != 2\n[1] TRUE\n```\n:::\n\n::: {.fragment}\nLos operadores lógicos son: `|` OR, `&` AND, `!` NOT.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> TRUE | FALSE\n[1] TRUE\n> TRUE & FALSE\n[1] FALSE\n> TRUE & !FALSE\n[1] TRUE\n```\n:::\n\n## Crear objetos\n\nLas entidades que R crea y manipula se denominan objetos. Un objeto es un nombre que puedes usar para llamar a los datos almacenados. Los objetos se crean utilizando el operador de asignación `<-`. Cuando se crea un objeto este aparecerá en el *environment pane* de RStudio. En RStudio el atajo de teclado para `<-` es {{< kbd Alt-- >}}\n\n::: {.fragment}\n``` {.r filename=\"console\" code-line-numbers=\"false\"}\n> x <- 4 * 2\n```\n:::\n\n::: {.fragment}\nEn R los nombres se pueden nombrar de cualquier manera, con dos excepciones. Primero, un nombre no puede comenzar con un número. Segundo, un nombre no puede usar algunos símbolos especiales, como \\^, !, \\$, \\@, +, -, /, o \\*.\n:::\n\n::: {.fragment}\n### Llamar objetos\n\nEl valor de `x` no se imprime en consola, sólo se almacena. Si se quiere ver el valor, hay que llamarlo.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> x\n[1] 8\n```\n:::\n\n## Crear objetos\n\n::: {.fragment}\nSe pueden **c**ombinar múltiples elementos en un vector usando `c()`\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n# crear vector de números primos\nnumeros_primos <- c(2, 3, 5, 7, 11, 13)\n```\n:::\n\n::: {.fragment}\n### Operación con vectores\n\nAsí mismo, se pueden realizar operación con los vectores.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n# Multiplicar vector de números primos por dos.\n> numeros_primos * 2\n[1]  4  6 10 14 22 26\n```\n\nR ignora cualquier texto después de `#`. Esto permite escribir comentarios, texto que es ignorado por R pero leído por otras personas. Usa comentarios para explicar el porqué de tu código, no el cómo ni el qué.\n:::\n\n## Tipos de datos {.incremental}\n\n::: {.fragment}\nEn R, hay 5 tipos de datos principales:\n\n-   **numeric**: \n    -   **double**: números reales (con decimales)\n    -   **integer**: números enteros\n-   **character**: cadenas de texto (a.k.a. *strings*)\n-   **complex**: números complejos. \n-   **logical**: `TRUE`, `FALSE`, `NA`. (a.k.a. *booleanos*)\n:::\n\n::: {.fragment}\n**Para identificar el tipo de datos:**\n\n1. `class()`: dvuelve la clase de un objeto.\n2. `typeof()`: muestra el tipo de dato subyacente.\n3. `mode()`: informa el modo de almacenamiento.\n4. `is.numeric()`, `is.character()`, `is.logical()`, etc.: verifica si el dato es de un tipo específico.\n:::\n\n## Estructura de datos  {.incremental}\n\n::: {.fragment}\nEn R, estos son las principales estructuras de datos:\n\n-   **Vectores**: unidimensionales y homogéneos.\n-   **Matrices**: bidimensionales y homogéneas.\n-   **Arrays**: multidimensionales y homogéneos.\n-   **Data** frames: bidimensionales y heterogéneos.\n-   **Listas**: estructuras heterogéneas y unidimensionales.\n-   **Factores**: datos categorizados\n:::\n\n::: {.fragment}\n**Para identificar la estructura de datos:**\n\n1. `str()`: muestra la estructura compacta del objeto.\n2. `dim()`: devuelve las dimensiones (filas y columnas).\n3. `length()`: número total de elementos.\n4. `attributes()`: verifica los atributos del objeto.\n5. `summary()`: resumen estadístico o descriptivo del objeto.\n:::\n\n## Funciones\n\nLas funciones son bloques de código que realizan una tarea específica y que pueden ser invocadas (llamadas) desde cualquier parte. \n\n::: {.fragment}\nEn R las funciones se han de llamar así:\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\nnombre_funcion(argumento_1 = valor_1, argumento_2 = valor_2, ...)\n```\n:::\n\n::: {.fragment}\nPor ejemplo la función `seq()` que crea secuencias regulares de números.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> seq(from = 1, to = 10)\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n::: {.fragment}\nA menudo omitimos los nombres de los primeros argumentos en las llamadas a funciones, por lo que podemos reescribir esto de la siguiente manera:\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> seq(1, 10)\n [1]  1  2  3  4  5  6  7  8  9 10\n```\n:::\n\n::: {.fragment}\nAlgunas funciones de R: `mean()` calcula la media de un vector. `sum()` suma los elementos de un vector. `summary()` proporciona un resumen estadístico de un objeto. `str()` muestra la estructura de un objeto.\n:::\n\n## Paquetes\n\nLos paquetes son las unidades fundamentales del código reproducible en R. Incluyen funciones reutilizables de R, la documentación que describe cómo usarlas y datos de muestra. @wickham2023 Muchos paquetes de R se encuentran en The Comprehensive R Archive Network (CRAN). CRAN es una red de servidores FTP y web alrededor del mundo que almacenan versiones idénticas y actualizadas del código y la documentación de R.\n\n::: {.fragment}\n### Instalar y usar paquetes\n\nEn R (casi) todos los paquetes se pueden instalar utilizando la función `install.packages()`.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\ninstall.packages(\"ethnobotanyR\")\n```\n:::\n\n::: {.fragment}\nPara poder usar los paquetes se han de cargar (llamar) usando la función `library()`.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\nlibrary(ethnobotanyR)\n```\n::::\n\n::: {.fragment}\nFunciones de diferentes paquetes pueden tener el mismo nombre. Por lo cual es recomendable ser explicito a la hora de llamarlas, para lo cual se utilizan `::` entre el nombre del paquete y el nombre de la función.\n\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\nnombre_paquete::nombre_funcion()\n```\n:::\n\n## Esto no es una pipa `|>`\n\nR 4.1.0 introdujo el operador `|>` (pipe). Este operador toma la salida de una función y la pasa a otra función como argumento. Enlaza todos los pasos del análisis de datos haciendo que el código sea más eficiente y legible. \n\n::: {.fragment}\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> media_numeros_primos <- mean(c(2, 3, 5, 7, 11, 13))\n> print(media_numeros_primos)\n[1] 6.833333\n```\n:::\n\n::: {.fragment}\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> numeros_primos <- c(2, 3, 5, 7, 11, 13)\n> media_numeros_primos <- mean(numeros_primos)\n> print(media_numeros_primos)\n[1] 6.833333\n```\n:::\n\n::: {.fragment}\n``` {.r filename=\"Console\" code-line-numbers=\"false\"}\n> media_numeros_primos <- \n+   c(2, 3, 5, 7, 11, 13) |> \n+   mean() |> \n+   print()\n[1] 6.833333\n```\n\nEn RStudio hay que activarlo yendo **Tools** -> **Global Options** -> **Code** -> **Editing**. El atajo de teclado para `|>` es {{< kbd Shift-Ctrl-M >}}\n:::\n\n## Scripts\n\nLos scripts son archivos que contienen código en lenguaje R, organizado de manera secuencial para realizar operaciones específicas, análisis de datos, o cualquier tarea que se pueda automatizar.\n\n::: columns\n::: {.column .fragment width=\"60%\"}\n``` {.r filename=\"script.r\" code-line-numbers=\"true\"}\n# Instalar paquetes\ninstall.packages(\n  c(\n    \"tidyverse\",\n    \"palmerpenguins\"\n    \"ggthemes\"\n  )\n)\n\n# Cargar paquetes\nlibrary(tidyverse)\nlibrary(palmerpenguins)\nlibrary(ggthemes)\n\n# Crea un vector con el gráfico hecho en `ggplot2`\nfig_pinguinos <- \n  palmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  ) + \n  ggplot2::geom_point()\n\n# Muestras el gráfico\nfig_pinguinos\n```\n:::\n\n::: {.column .fragment width=\"40%\"}\nEn RStudio hay varias maneras de crear un script y otros archivos.\n\n-   En la opción a **File** -> **New File** -> **New R script**\n-   Usando el atajo de teclado {{< kbd Shift-Ctrl-N >}}\n-   En la opción New File, sobre la esquina superior derecha del Source pane, en este icono ![](images/new-file.png){width=\"49\"}\n-   En la opción New Blank File de la pestaña Files en el Output pane ![](images/new-blank-file.png){width=\"156\"}\n-   Usando la Paleta de comandos {{< kbd Ctrl-Shift-P >}} o **Tools** > **Show Command Palette**\n\nEl código de un script se puede correr linea por linea usando {{< kbd Ctrl-Enter >}} o {{< kbd Ctrl-Shift-Enter >}} corre todo el script.\n:::\n:::\n\n## Que alguien llame a alguien\n\nAntes de pedir ayuda a los demás, suele ser buena idea que intentes ayudarte a ti mismo.\n\n::: {.fragment}\n### Dentro de R\n\nLa función `help()` o el operador `?` proporcionan acceso a documentación de las funciones, conjuntos de datos y otros objetos de R. Por ejemplo: `help(lm)` o `help(\"lm\")`, o `?lm` o `?\"lm\"`. Si el paquete de la función no está cargado se tendría que usar `help(rlm, package=\"MASS\")`. Para acceder a la documentación de un paquete se ha usar `help(package=\"MASS\")`. Se puede usar `??` para una palabra o frase en la documentación.\n\n<!-- Algunos paquetes incluyen viñetas o demos. Pueden consultarse usando: `browseVignettes` y `vignette` muestra las viñetas de los paquetes instalados. `browseVignettes(package=\"package-name\")` muestra las viñetas del paquete buscado. `vignette(\"vignette-name\")` muestra la viñeta buscada. `demo` muestra los demo de los paquetes instalados. `demo(package=\"package-name\")` muestra los demo del paquete buscado. `demo(\"demo-name\")` inicia el demo buscado. -->\n:::\n\n::: {.fragment}\n### Fuera de R\n\n::: columns\n::: {.column width=\"50%\"}\n-   Google is your friend\n-   Stack Overflow\n-   <https://search.r-project.org>\n-   <https://rseek.org>\n\n![](images/help-me-help-you.png){fig-align=\"center\"}\n:::\n\n::: {.column width=\"50%\"}\nSiempre es buena idea hacer un [**reprex**](https://reprex.tidyverse.org) (minimal reproducible example). Un buen reprex facilita que otras personas puedan ayudarlo y, a menudo, usted mismo descubrirá el problema durante el proceso. Hacer un reprex consiste en:\n\n-   Hacer que tu código sea reproducible, usando `reprex`\n-   Hacerlo mínimo eliminando todo lo que no esté relacionado con el problema.\n:::\n:::\n\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Crear un script dentro de la carpeta `intro-r`\n-   Practicar la sintaxis vista en esta sección\n-   Consultar la ayuda del paquete `palmerpenguins`\n\n<br>\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_214d4b18\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## {background-color=\"black\" background-image=\"images/tidyverse.png\" transition=\"slide-in\"}\n\n## Tidyverse\n\nEl tidyverse es una colección estructurada de paquetes de R diseñados para la ciencia de datos. Todos los paquetes comparten una filosofía de diseño subyacente, una gramática y estructuras de datos. @wickham2019.\n\n::: {.fragment}\n``` {.r filename=\"console\" code-line-numbers=\"false\"}\ninstall.packages(\"tidyverse\")\n```\n\nCarguemos el `tidyverse` y observemos la salida.\n\n``` {.r filename=\"console\" code-line-numbers=\"false\"}\n> library(tidyverse)\n── Attaching core tidyverse packages ─────────────────────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.0     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ───────────────────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package to force all conflicts to become errors\n```\n:::\n\n## Tidyverse y la ciencia de datos\n\n![El Tidyverse tiene multipes paquetes que nos ayudaran durante todo el proceso de analizar los datos. Tomado de @çetinkaya-rundel2023.](images/data-science_tidyverse.png){#data-science-2 fig-align=\"center\"}\n\n## Datos ordenados\n\nHay tres reglas interrelacionadas que hacen que un conjunto de datos esté ordenado:\n\n1.  Cada variable es una columna; cada columna es una variable.\n2.  Cada observación es una fila; cada fila es una observación.\n3.  Cada valor es una celda; cada celda es un único valor.\n\n::: {.fragment}\n![Las siguientes tres reglas hacen que un conjunto de datos esté ordenado: las variables son columnas, las observaciones son filas y los valores son celdas. Tomado de @wickham2023a.](images/tidy-1.svg){#tidydata fig-align=\"center\"}\n:::\n\n::: footer\nArtículo original @wickham2014\n:::\n\n## Tibbles\n\n-   **Data frame:** estructura de datos bidimensional de variables (en las columnas) y observaciones (en las filas), puede almacenar diferentes tipos de datos.\n\n\n::: {.cell}\n\n```{.r .cell-code}\niris\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n  Sepal.Length Sepal.Width Petal.Length Petal.Width Species\n1          5.1         3.5          1.4         0.2  setosa\n2          4.9         3.0          1.4         0.2  setosa\n3          4.7         3.2          1.3         0.2  setosa\n4          4.6         3.1          1.5         0.2  setosa\n5          5.0         3.6          1.4         0.2  setosa\n```\n\n\n:::\n:::\n\n\n::: {.fragment}\n-   **Tibble:** versión moderna de un data frame, optimizados para un manejo de datos más intuitivo y legible. Pertenece al `tidyverse`.\n\n::: columns\n::: {.column width=\"60%\"}\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins\n```\n:::\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 8\n  species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n1 Adelie  Torgersen           39.1          18.7               181        3750\n2 Adelie  Torgersen           39.5          17.4               186        3800\n3 Adelie  Torgersen           40.3          18                 195        3250\n4 Adelie  Torgersen           NA            NA                  NA          NA\n5 Adelie  Torgersen           36.7          19.3               193        3450\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.column width=\"40%\"}\n![](images/tibble.png){fig-align=\"center\" width=\"400\"}\n:::\n:::\n\n:::\n\n## Conozcamos los datos\n\n::: columns\n::: {.column width=\"60%\"}\nLa función `dplyr::glimpse()` es similar a `utils::str()`, pero intenta mostrar la mayor cantidad de datos posible.\n\n::: {.fragment fragment-index=2}\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::glimpse()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 344\nColumns: 8\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, 34.1, …\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, 18.1, …\n$ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 190, 186…\n$ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, 3475, …\n$ sex               <fct> male, female, female, NA, female, male, female, male…\n$ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007…\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment fragment-index=2}\nLas tres variables de `palmerpenguins::penguins` que usaremos son:\n\n-   `species`: la especie de un pingüino (Adelie, Chinstrap o Gentoo).\n-   `flipper_length_mm`: longitud de la aleta de un pingüino, en milímetros.\n-   `body_mass_g`: masa corporal de un pingüino, en gramos.\n:::\n:::\n\n::: {.column .fragment fragment-index=2 width=\"40%\"}\n::: {layout-ncol=1}\n![](images/lter_penguins.png)\n\n![](images/culmen_depth.png)\n\nTomado de @palmerpenguins.\n:::\n:::\n:::\n\n::: footer\nUtilice `?palmerpenguins::penguins` o `?penguins` para saber más sobre los datos.\n:::\n\n## `ggplot2`\n\n::: columns\n::: {.column width=\"60%\"}\nSistema para la creación de gráficos. Se basa en la gramática de gráficos (marco teórico desarrollada por Leland Wilkinson para construir gráficos de manera sistemática y coherente), permitiendo construir gráficos de manera declarativa mediante capas de componentes, como datos, escalas, geoms (formas geométricas), facetas y temas.\n:::\n\n::: {.column width=\"40%\"}\n![](images/ggplot2.png){fig-align=\"center\" width=\"250\"}\n:::\n:::\n\n::: columns\n::: {.column .fragment fragment-index=2 width=\"50%\"}\n![`ggplot2` es como los ogros.](images/meme_shrek.jpeg){fig-align=\"center\"}\n:::\n\n::: {.column .fragment fragment-index=1 width=\"50%\"}\n![Los siete componentes que permiten crear un gráfico en `ggplot2`.](images/diagram_ggplot2.png){fig-align=\"center\"}\n:::\n:::\n\n## `ggplot2` --- data {auto-animate=\"true\"}\n\nPara comenzar un gráfico, primero definimos un objeto gráfico usando la función `ggplot2::ggplot()`. El primer argumento de `ggplot2::ggplot()` son los datos que se utilizará en el gráfico:\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|1,3|2\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-data-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- mapping {auto-animate=\"true\"}\n\n**mapping** define cómo las variables de los datos se asignan a propiedades visuales (**aesthetics**) del gráfico. Se definen con `ggplot2::aes()`. `x` e `y` especifican qué variables se asignarán a los ejes x e y.\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|3-6|3,6|4|5\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-mapping-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- layers: geometry {auto-animate=\"true\"}\n\n**geometry** es el objeto geométrico que se utiliza para representar datos: puntos, líneas o rectángulos. Se definen con `geom_*()`. A menudo se describen los gráficos por el tipo de geom que utilizan[^1].\n\n[^1]: `geom_bar()` = gráficos de barras, `geom_line()` = gráficos de líneas, `geom_boxplot()` = diagramas de caja, `geom_point()` = gráficos de dispersión, entre otros.\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|7-9|7|8\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-geometry-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- agregando aesthetics {auto-animate=\"true\"}\n\nPodemos agregar más propiedades visuales (aesthetics). `ggplot2` asigna un valor único (como color) a cada nivel de una variable categórica y añade una leyenda que lo explica. Este proceso se llama **scaling**.\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|6\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  ggplot2::geom_point()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-scaling-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- agregando layers {auto-animate=\"true\"}\n\nPodemos hacer los gráficos más informativos agregando más layers, ya sean objetos geométricos (`geom_*`), transformaciones estadísticas (`stats_*`) o ajustes de posición (`position_*`).\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|10-12\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g,\n    color = species\n  )\n) +\n  ggplot2::geom_point() + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-geoms-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- asignación global o local {auto-animate=\"true\"}\n\nLos aesthetics pueden agregarse de forma global para todo los geom del gráfico o pueden asignarse de forma local para un geom especifico. \n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|8-12|9-11|10\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-asignacion-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- accesibilidad {auto-animate=\"true\"}\n\nGeneralmente no es una buena idea representar información usando sólo colores, por lo cual podemos combinar con formas o usando paletas de colores apta para personas con limitaciones visuales.\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|11,17|11|17\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  ) + \n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-accesibilidad-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- scales {auto-animate=\"true\"}\n\n**scales** controlan cómo se traducen los datos a propiedades visuales. scales suelen formar parejas con aesthetics, y se representan en los gráficos mediante guías, como ejes o leyendas. `ggplot2::labs()` y `ggplot2::lims()` son para los ajustes más comunes de las etiquetas y los límites.\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|17-24|18,19|20,21|22,23\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  ) + \n  ggplot2::labs(\n    title = \"Masa corporal y longitud de la aleta\",\n    subtitle = \"Dimensiones para los Pingüinos Adelie (Adelia), Chinstrap (Barbijo) y Gentoo (Papúa)\",\n    x = \"Longitud de la aleta (mm)\",\n    y = \"Masa corporal (g)\",\n    color = \"Especie\",\n    shape = \"Especie\"\n  ) + \n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-labs-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- theme {auto-animate=\"true\"}\n\n`theme` controla casi todos los elementos visuales del gráfico que no están controlados por los datos y es importante para el aspecto del gráfico. Puede utilizarse muchas de las funciones de `theme_*( )`.\n\n\n::: {.cell layout-align=\"center\" output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"|25\"}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::geom_smooth(\n    method = \"lm\"\n  ) + \n  ggplot2::labs(\n    title = \"Masa corporal y longitud de la aleta\",\n    subtitle = \"Dimensiones para los Pingüinos Adelie (Adelia), Chinstrap (Barbijo) y Gentoo (Papúa)\",\n    x = \"Longitud de la aleta (mm)\",\n    y = \"Masa corporal (g)\",\n    color = \"Especies\",\n    shape = \"Especies\"\n  ) + \n  ggplot2::theme_minimal() +\n  ggthemes::scale_color_colorblind()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-themes-1.png){fig-align='center' width=960}\n:::\n:::\n\n\n## `ggplot2` --- invocanción\n\n::: {.fragment}\nMientras se aprende, es bueno ser explicito con los argumentos y los valores.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins,\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point()\n```\n:::\n\n:::\n\n::: columns\n::: {.column .fragment width=\"50%\"}\nEs común que se omita el nombre de los argumentos o que se adopten estilos o formas de escribir código.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  palmerpenguins::penguins,\n  ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n) +\n  ggplot2::geom_point()\n```\n:::\n\n:::\n\n::: {.column .fragment width=\"50%\"}\nLo anterior, en un flujo de trabajo usando `|>` se vería así:\n\n\n::: {.cell}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g)\n  ) +\n  ggplot2::geom_point()\n```\n:::\n\n:::\n:::\n\n::: footer\nUno de los estilos recomendables es [la guía de estilo del tidyverse](https://style.tidyverse.org)\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Abrir el archivo `ggplot.qmd` que se encuentra en la carpeta `intro-r`\n-   Realizar la **Actividad 1**.\n\n<br>\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_65053ab3\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M96 64c0-17.7 14.3-32 32-32H448h64c70.7 0 128 57.3 128 128s-57.3 128-128 128H480c0 53-43 96-96 96H192c-53 0-96-43-96-96V64zM480 224h32c35.3 0 64-28.7 64-64s-28.7-64-64-64H480V224zM32 416H544c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32z\"/></svg>`{=html} Pausa {background-color=\"#000000\" transition=\"slide-in\"}\n\n<br>\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_10add366\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">10</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# Visualizando distribuciones\n\n## Una variable categórica\n\n::: columns\n::: {.column .fragment width=\"50%\"}\nUna variable es categórica si toma uno de varios valores limitados. Para analizar su distribución, se usa un gráfico de barras, donde la altura indica cuántas observaciones tiene cada valor.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = species\n    )\n  ) +\n  ggplot2::geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-categorica-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n:::\n\n::: {.column .fragment width=\"50%\"}\nEn gráficos de barras con categorías no ordenadas, es útil reordenar las barras por frecuencia. Se hace convirtiendo la variable en un factor y reordenando los niveles con `forcats::fct_infreq()`.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = forcats::fct_infreq(species)\n    )\n  ) +\n  ggplot2::geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-categorica-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n:::\n:::\n\n## Una variable numérica\n\nUna variable es numérica (o cuantitativa) si puede tomar una amplia gama de valores numéricos y tiene sentido sumarlos, restarlos o calcular promedios con esos valores. Las variables numéricas pueden ser continuas o discretas. Una visualización comúnmente utilizada para distribuciones de variables continuas es un histograma.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g\n    )\n  ) +\n  ggplot2::geom_histogram(\n    binwidth = 200\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-histogram-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n## Una variable numérica\n\nUn gráfico de densidad es una versión suavizada de un histograma y una alternativa práctica, especialmente para datos continuos que provienen de una distribución subyacente suave. Muestra menos detalles que un histograma, pero puede facilitar la comprensión rápida de la forma de la distribución, especialmente con respecto a la moda y la asimetría.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g\n    )\n  ) +\n  ggplot2::geom_density()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-density-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n# Visualizando relaciones\n\n## Una variable numérica y categórica\n\nPara visualizar la relación entre una variable numérica y una variable categórica, podemos usar diagramas de caja (box plots). Un diagrama de caja es un tipo de representación visual para medidas de posición (percentiles) que describen una distribución. También es útil para identificar posibles valores atípicos.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = species,\n      y = body_mass_g\n    )\n  ) +\n  ggplot2::geom_boxplot()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-boxplot-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n## Una variable numérica y categórica\n\nAlternativamente, podemos hacer gráficos de densidad con `ggplot2::geom_density()`.\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g,\n      color = species\n      \n    )\n  ) +\n  ggplot2::geom_density(\n    linewidth = 0.75\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-numerica-categorica-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = body_mass_g,\n      color = species,\n      fill = species\n    )\n  ) +\n  ggplot2::geom_density(\n    alpha = 0.5\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-numerica-categorica-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n:::\n\n## Dos variables categóricas\n\nPodemos utilizar gráficos de barras apiladas para visualizar la relación entre dos variables categóricas.\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = island,\n      fill = species\n    )\n  ) +\n  ggplot2::geom_bar()\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-dos-categoricas-1-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|8\"}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = island,\n      fill = species\n    )\n  ) +\n  ggplot2::geom_bar(position = \"fill\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-dos-categoricas-2-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n:::\n\n## Dos variables numéricas\nUn diagrama de dispersión es probablemente el gráfico más utilizado para visualizar la relación entre dos variables numéricas.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  ) +\n  ggplot2::geom_point(\n    ggplot2::aes(\n      color = species,\n      shape = island\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-dos-numericas-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n## Tres o más variables\n\nEn `ggplot2` podemos incorporar más variables en un gráfico asignándolas a estéticas adicionales. Agregar demasiadas asignaciones estéticas a un gráfico lo hace confuso y difícil de interpretar. Una forma particularmente útil para variables categóricas es dividir el gráfico en **facets**, subgráficos que muestran cada uno un subconjunto de los datos.\n\n::: {.fragment}\n\n::: {.cell layout-align=\"center\" output-location='column-fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  ggplot2::ggplot(\n    ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  ) +\n  ggplot2::geom_point(\n    ggplot2::aes(\n      color = species,\n      shape = species\n    )\n  ) + \n  ggplot2::facet_wrap(\n    ~island\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-tres-variables-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n\n## Problemas comunes con `ggplot2`\n\nUn problema común al crear gráficos con ggplot2 es colocar el `+` en el lugar incorrecto: debe ir al final de la línea, no al inicio.\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n### Forma incorrecta\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins\n) \n+ ggplot2::geom_point(\n  mapping = ggplot2::aes(\n    x = flipper_length_mm,\n    y = body_mass_g\n  )\n)\n```\n:::\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n### Forma correcta: \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggplot2::ggplot(\n  data = palmerpenguins::penguins\n) + \n  ggplot2::geom_point(\n    mapping = ggplot2::aes(\n      x = flipper_length_mm,\n      y = body_mass_g\n    )\n  )\n```\n\n::: {.cell-output-display}\n![](index_files/figure-revealjs/ggplot2-correcta-1.png){fig-align='center' width=960}\n:::\n:::\n\n:::\n:::\n\n## Resumen de `ggplot2`\n\n::: {.fragment}\n### Asignación global\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDATA |> \n  ggplot2::ggplot(\n    ggplot2::aes(MAPPINGS)\n  ) + \n  ggplot2::geom_*()\n```\n:::\n\n:::\n\n::: {.fragment}\n### Asignación local\n\n\n::: {.cell}\n\n```{.r .cell-code}\nDATA |> \n  ggplot2::ggplot(\n    ggplot2::aes(MAPPINGS)\n  ) + \n  ggplot2::geom_*(ggplot2::aes(MAPPINGS))\n```\n:::\n\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Abrir el archivo `ggplot.qmd` que se encuentra en la carpeta `intro-r`\n-   Realizar la **Actividad 2**.\n\n<br>\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_a47c94d9\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n# «En el principio era el Verbo»\n\n## Tidyverse y la ciencia de datos\n\n![El Tidyverse tiene multipes paquetes que nos ayudaran durante todo el proceso de analizar los datos. Tomado de @çetinkaya-rundel2023.](images/data-science_tidyverse.png){#data-science-2 fig-align=\"center\"}\n\n## `dplyr`\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n`dplyr` es una gramática de transformación de datos que proporciona un conjunto consistente de verbos (funciones) que ayudan a resolver los desafíos de manipulación de datos más comunes. \n\n![](images/dplyr.png){fig-align=\"center\" width=\"250\"}\n:::\n\n::: {.column .fragment width=\"50%\"}\nTodas las funciones tienen estás características en común:\n\n1.    El primer argumento es siempre un data frame.\n2.    Los argumentos siguientes suelen describir las columnas sobre las que se va a operar utilizando los nombres de las variables (sin comillas).\n3.    La salida es siempre un nuevo data frame.\n:::\n:::\n\n::: {.fragment}\nLos verbos de `dplyr` están organizados en cuatro grupos basados en lo que operan:\n\n::: columns\n::: {.column width=\"25%\"}\n### Filas\n-   `arrange()`\n-   `distinct()`\n-   `filter()`\n-   `slice_*()`\n:::\n\n::: {.column width=\"25%\"}\n### Columnas\n-   `mutate()`\n-   `relocate()`\n-   `rename()`\n-   `select()`\n:::\n\n::: {.column width=\"25%\"}\n### Grupos\n-   `count()`\n-   `group_by()`\n-   `summarise()`\n:::\n\n::: {.column width=\"25%\"}\n### Data frames\n-   `*_join()`\n:::\n:::\n\n:::\n\n## `dplyr` --- filas: `arrange()`\n\n::: {.fragment}\n`arrange()` Ordena las filas utilizando los valores de las columnas\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::arrange(island)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Biscoe           37.8          18.3               174        3400\n 2 Adelie  Biscoe           37.7          18.7               180        3600\n 3 Adelie  Biscoe           35.9          19.2               189        3800\n 4 Adelie  Biscoe           38.2          18.1               185        3950\n 5 Adelie  Biscoe           38.8          17.2               180        3800\n 6 Adelie  Biscoe           35.3          18.9               187        3800\n 7 Adelie  Biscoe           40.6          18.6               183        3550\n 8 Adelie  Biscoe           40.5          17.9               187        3200\n 9 Adelie  Biscoe           37.9          18.6               172        3150\n10 Adelie  Biscoe           40.5          18.9               180        3950\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nPara ordenar de mayor a menor se ha de usar `dplyr::desc()` dentro de `dplyr::arrange()`.\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::arrange(dplyr::desc(island))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n## `dplyr` --- filas: `distinct()`\n\n::: {.fragment}\n`distinct()` Mantiene filas distintas/únicas\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::distinct(island)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 3 × 1\n  island   \n  <fct>    \n1 Torgersen\n2 Biscoe   \n3 Dream    \n```\n\n\n:::\n:::\n\n:::\n\n## `dplyr` --- filas: `filter()`\n\n::: {.fragment}\n`filter()` Mantiene las filas que cumplen una condición\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::filter(island == \"Dream\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 124 × 8\n   species island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>           <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Dream            39.5          16.7               178        3250\n 2 Adelie  Dream            37.2          18.1               178        3900\n 3 Adelie  Dream            39.5          17.8               188        3300\n 4 Adelie  Dream            40.9          18.9               184        3900\n 5 Adelie  Dream            36.4          17                 195        3325\n 6 Adelie  Dream            39.2          21.1               196        4150\n 7 Adelie  Dream            38.8          20                 190        3950\n 8 Adelie  Dream            42.2          18.5               180        3550\n 9 Adelie  Dream            37.6          19.3               181        3300\n10 Adelie  Dream            39.8          19.1               184        4650\n# ℹ 114 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nHay muchas funciones y operadores que resultan útiles a la hora de construir las expresiones utilizadas para filtrar los datos:\n\n-   Operadores de comparación (`==`, `!=`, `>`, `<`, `>=`, `<=`)\n-   Operadores lógicos (`|`, `&`, `!`)\n-   `base::is.na()`\n-   `dplyr::between()`, `dplyr::near()`\n:::\n\n## `dplyr` --- filas: `slice_()*`\n\n::: {.fragment}\n`slice_()*` Subconjunto de filas utilizando sus posiciones\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::slice_min(body_mass_g, n = 5)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 7 × 8\n  species   island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>     <fct>              <dbl>         <dbl>             <int>       <int>\n1 Chinstrap Dream               46.9          16.6               192        2700\n2 Adelie    Biscoe              36.5          16.6               181        2850\n3 Adelie    Biscoe              36.4          17.1               184        2850\n4 Adelie    Biscoe              34.5          18.1               187        2900\n5 Adelie    Dream               33.1          16.1               178        2900\n6 Adelie    Torgersen           38.6          17                 188        2900\n7 Chinstrap Dream               43.2          16.6               187        2900\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nPodemos encontrar varias funciones: `dplyr::slice()`, `dplyr::slice_head()`, `dplyr::slice_tail()`, `dplyr::slice_min()`, `dplyr::slice_max()`, `dplyr::slice_sample()`.\n:::\n\n## `dplyr` --- filas: ejemplo\n\n\n::: {.cell layout-align=\"center\" output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2-4|5-8|9-11|12-15\"}\npalmerpenguins::penguins |>\n  dplyr::filter(\n    species == \"Chinstrap\"\n  ) |> \n  dplyr::slice_max(\n    body_mass_g,\n    n = 5\n  ) |> \n  dplyr::arrange(\n    bill_length_mm\n  ) |> \n  dplyr::distinct(\n    flipper_length_mm,\n    .keep_all = TRUE\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 4 × 8\n  species   island bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n  <fct>     <fct>           <dbl>         <dbl>             <int>       <int>\n1 Chinstrap Dream            49.2          18.2               195        4400\n2 Chinstrap Dream            50.8          18.5               201        4450\n3 Chinstrap Dream            52            20.7               210        4800\n4 Chinstrap Dream            52.8          20                 205        4550\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n\n## `dplyr` --- columnas: `mutate()`\n\n::: {.fragment}\n`mutate()` Crear, modificar y eliminar columnas\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::mutate(\n    volume = (pi * bill_depth_mm * bill_length_mm) / 3,\n    .after = bill_depth_mm\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 9\n   species island    bill_length_mm bill_depth_mm volume flipper_length_mm\n   <fct>   <fct>              <dbl>         <dbl>  <dbl>             <int>\n 1 Adelie  Torgersen           39.1          18.7   766.               181\n 2 Adelie  Torgersen           39.5          17.4   720.               186\n 3 Adelie  Torgersen           40.3          18     760.               195\n 4 Adelie  Torgersen           NA            NA      NA                 NA\n 5 Adelie  Torgersen           36.7          19.3   742.               193\n 6 Adelie  Torgersen           39.3          20.6   848.               190\n 7 Adelie  Torgersen           38.9          17.8   725.               181\n 8 Adelie  Torgersen           39.2          19.6   805.               195\n 9 Adelie  Torgersen           34.1          18.1   646.               193\n10 Adelie  Torgersen           42            20.2   888.               190\n# ℹ 334 more rows\n# ℹ 3 more variables: body_mass_g <int>, sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nHay muchas funciones que pueden ser usadas, `?dplyr::mutate()` para ver un listado de ellas.\n:::\n\n## `dplyr` --- columnas: `pull()`\n\n::: {.fragment}\n`pull()` Extraer una sola columna\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::pull(species)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  [1] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n  [8] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [15] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [22] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [29] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [36] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [43] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [50] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [57] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [64] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [71] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [78] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [85] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [92] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n [99] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[106] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[113] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[120] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[127] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[134] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[141] Adelie    Adelie    Adelie    Adelie    Adelie    Adelie    Adelie   \n[148] Adelie    Adelie    Adelie    Adelie    Adelie    Gentoo    Gentoo   \n[155] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[162] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[169] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[176] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[183] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[190] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[197] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[204] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[211] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[218] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[225] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[232] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[239] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[246] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[253] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[260] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[267] Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo    Gentoo   \n[274] Gentoo    Gentoo    Gentoo    Chinstrap Chinstrap Chinstrap Chinstrap\n[281] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[288] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[295] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[302] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[309] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[316] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[323] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[330] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[337] Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap Chinstrap\n[344] Chinstrap\nLevels: Adelie Chinstrap Gentoo\n```\n\n\n:::\n:::\n\n:::\n\n## `dplyr` --- columnas: `relocate()`\n\n::: {.fragment}\n`relocate()` Cambiar el orden de las columnas\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::relocate(\n    year,\n    sex\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n    year sex    species island    bill_length_mm bill_depth_mm flipper_length_mm\n   <int> <fct>  <fct>   <fct>              <dbl>         <dbl>             <int>\n 1  2007 male   Adelie  Torgersen           39.1          18.7               181\n 2  2007 female Adelie  Torgersen           39.5          17.4               186\n 3  2007 female Adelie  Torgersen           40.3          18                 195\n 4  2007 <NA>   Adelie  Torgersen           NA            NA                  NA\n 5  2007 female Adelie  Torgersen           36.7          19.3               193\n 6  2007 male   Adelie  Torgersen           39.3          20.6               190\n 7  2007 female Adelie  Torgersen           38.9          17.8               181\n 8  2007 male   Adelie  Torgersen           39.2          19.6               195\n 9  2007 <NA>   Adelie  Torgersen           34.1          18.1               193\n10  2007 <NA>   Adelie  Torgersen           42            20.2               190\n# ℹ 334 more rows\n# ℹ 1 more variable: body_mass_g <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\n`dplyr::relocate()` tiene dos argumentos muy útiles *.before* y *.after*.\n:::\n\n## `dplyr` --- columnas: `rename()`\n\n::: {.fragment}\n`rename()` Renombrar columnas\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::rename(\n    Pygoscelis = species\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n   Pygoscelis island  bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>      <fct>            <dbl>         <dbl>             <int>       <int>\n 1 Adelie     Torger…           39.1          18.7               181        3750\n 2 Adelie     Torger…           39.5          17.4               186        3800\n 3 Adelie     Torger…           40.3          18                 195        3250\n 4 Adelie     Torger…           NA            NA                  NA          NA\n 5 Adelie     Torger…           36.7          19.3               193        3450\n 6 Adelie     Torger…           39.3          20.6               190        3650\n 7 Adelie     Torger…           38.9          17.8               181        3625\n 8 Adelie     Torger…           39.2          19.6               195        4675\n 9 Adelie     Torger…           34.1          18.1               193        3475\n10 Adelie     Torger…           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nLa sintaxis siempre es `nuevo_nombre = viejo_nombre`. \n\n`rename_with()` renombra columnas utilizando una función. \n\nSi se tiene un montón de columnas con nombres inconsistentes y sería complicado corregirlas todas manualmente, consulte `janitor::clean_names()`.\n:::\n\n## `dplyr` --- columnas: `select()`\n\n::: {.fragment}\n`select()` Mantener o eliminar columnas utilizando sus nombres y tipos\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::select(\n    species,\n    sex\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 2\n   species sex   \n   <fct>   <fct> \n 1 Adelie  male  \n 2 Adelie  female\n 3 Adelie  female\n 4 Adelie  <NA>  \n 5 Adelie  female\n 6 Adelie  male  \n 7 Adelie  female\n 8 Adelie  male  \n 9 Adelie  <NA>  \n10 Adelie  <NA>  \n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nLas selecciones del Tidyverse implementan un dialecto de R en el que los operadores facilitan la selección de variables: `:` selecciona un rango de variables consecutivas. `!` toma el complemento de un conjunto de variables. `&` y `|` selecciona la intersección o la unión de dos conjuntos de variables. `c()` para combinar selecciones.\n\nAdemás, puede utilizar ayudantes de selección. `?dplyr::select()` para ver el listado completo.\n:::\n\n## `dplyr` --- columnas: ejemplo\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2-4|5-7|8-12\"}\npalmerpenguins::penguins |> \n  dplyr::rename(\n    pygoscelis = species\n  ) |> \n  dplyr::mutate(\n    volume = (pi * bill_depth_mm * bill_length_mm) / 3,\n  ) |> \n  dplyr::select(\n    pygoscelis,\n    volume,\n    body_mass_g:sex\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 4\n   pygoscelis volume body_mass_g sex   \n   <fct>       <dbl>       <int> <fct> \n 1 Adelie       766.        3750 male  \n 2 Adelie       720.        3800 female\n 3 Adelie       760.        3250 female\n 4 Adelie        NA           NA <NA>  \n 5 Adelie       742.        3450 female\n 6 Adelie       848.        3650 male  \n 7 Adelie       725.        3625 female\n 8 Adelie       805.        4675 male  \n 9 Adelie       646.        3475 <NA>  \n10 Adelie       888.        4250 <NA>  \n# ℹ 334 more rows\n```\n\n\n:::\n:::\n\n\n## `dplyr` --- grupos: `count()`\n\n::: {.fragment}\n`count()` Contar las observaciones de cada grupo\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::count(\n    species,\n    island\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nAl utilizar `sort = TRUE` como argumento, se mostrará los grupos más grandes en la parte superior.\n\n`dplyr::add_count()` y `dplyr::add_tally()` son equivalentes a `dplyr::count()` y `dplyr::tally()` pero utilizan `dplyr::mutate()` en lugar de `dplyr::summarise()` para añadir una nueva columna con recuentos por grupos.\n:::\n\n## `dplyr` --- grupos: `group_by()`\n\n::: {.fragment}\n`group_by()` Agrupar por una o varias variables\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::group_by(\n    species,\n    island\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 344 × 8\n# Groups:   species, island [5]\n   species island    bill_length_mm bill_depth_mm flipper_length_mm body_mass_g\n   <fct>   <fct>              <dbl>         <dbl>             <int>       <int>\n 1 Adelie  Torgersen           39.1          18.7               181        3750\n 2 Adelie  Torgersen           39.5          17.4               186        3800\n 3 Adelie  Torgersen           40.3          18                 195        3250\n 4 Adelie  Torgersen           NA            NA                  NA          NA\n 5 Adelie  Torgersen           36.7          19.3               193        3450\n 6 Adelie  Torgersen           39.3          20.6               190        3650\n 7 Adelie  Torgersen           38.9          17.8               181        3625\n 8 Adelie  Torgersen           39.2          19.6               195        4675\n 9 Adelie  Torgersen           34.1          18.1               193        3475\n10 Adelie  Torgersen           42            20.2               190        4250\n# ℹ 334 more rows\n# ℹ 2 more variables: sex <fct>, year <int>\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\n`dplyr::group_by()` no cambia los datos pero, si observa detenidamente la salida, se dará cuenta de que la salida indica que está «agrupada por» (`Groups: species, island [5]`). Esto significa que las operaciones posteriores funcionarán ahora por grupo. Por lo cual es recomendable usar `dplyr::ungroup()` cuando sea necesario.\n:::\n\n## `dplyr` --- grupos: `summarise()`\n\n::: {.fragment}\n`summarise()` Resumir cada grupo en una fila\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code}\npalmerpenguins::penguins |> \n  dplyr::group_by(\n    species,\n    island\n  ) |> \n  dplyr::summarise(\n    n = dplyr::n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 3\n# Groups:   species [3]\n  species   island        n\n  <fct>     <fct>     <int>\n1 Adelie    Biscoe       44\n2 Adelie    Dream        56\n3 Adelie    Torgersen    52\n4 Chinstrap Dream        68\n5 Gentoo    Biscoe      124\n```\n\n\n:::\n:::\n\n:::\n\n::: {.fragment}\nLa operación de agrupamiento más importante. Reduce el data frame para que tenga una sola fila para cada grupo. `dplyr::summarise()` y `dplyr::summarize()` son sinónimos.\n\nFunciones útiles: centrales (`base::mean()`, `base::median()`), dispersión (`base::sd()`, `base::IQR()`, `base::mad()`), rango (`base::min()`, `base::max()`), posición (`dplyr::first()`, `dplyr::last()`, `dplyr::nth()`), recuento (`dplyr::n()`, `dplyr::n_distinto()`), lógicas (`dplyr::any()`, `dplyr::all()`).\n:::\n\n## `dplyr` --- grupos: ejemplo\n\n\n::: {.cell output-location='fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2-6|7-10\"}\npalmerpenguins::penguins |> \n  dplyr::group_by(\n    species,\n    island,\n    sex\n  ) |> \n  dplyr::summarise(\n    mean_body_mass_g = base::mean(body_mass_g, na.rm = TRUE),\n    n = dplyr::n()\n  )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 5\n# Groups:   species, island [5]\n   species   island    sex    mean_body_mass_g     n\n   <fct>     <fct>     <fct>             <dbl> <int>\n 1 Adelie    Biscoe    female            3369.    22\n 2 Adelie    Biscoe    male              4050     22\n 3 Adelie    Dream     female            3344.    27\n 4 Adelie    Dream     male              4046.    28\n 5 Adelie    Dream     <NA>              2975      1\n 6 Adelie    Torgersen female            3396.    24\n 7 Adelie    Torgersen male              4035.    23\n 8 Adelie    Torgersen <NA>              3681.     5\n 9 Chinstrap Dream     female            3527.    34\n10 Chinstrap Dream     male              3939.    34\n11 Gentoo    Biscoe    female            4680.    58\n12 Gentoo    Biscoe    male              5485.    61\n13 Gentoo    Biscoe    <NA>              4588.     5\n```\n\n\n:::\n:::\n\n\n## `dplyr` --- data frames\n\n::: columns\n::: {.column width=\"40%\"}\n::: {.fragment fragment-index=1}\nLas uniones de transformación (mutating joins) agregan nuevas variables a un data frame a partir de las observaciones coincidentes en otra tabla. Hay cuatro uniones de transformación: la unión interior (inner join) y las tres uniones exteriores (outer joins).\n:::\n\n::: {.fragment fragment-index=3}\nLas uniones de filtro (filtering joins) filtran observaciones en un data frame con base en si coinciden o no con una observación de otra tabla.\n\nLas operaciones de conjuntos (set operations) que tratan las observaciones como elementos de un conjunto.\n:::\n:::\n\n::: {.column .fragment fragment-index=2 width=\"60%\"}\n![Tomado de @choueiry2024.](images/mutating_joins.png){fig-align=\"center\"}\n:::\n:::\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M64 96c0-35.3 28.7-64 64-64H512c35.3 0 64 28.7 64 64V352H512V96H128V352H64V96zM0 403.2C0 392.6 8.6 384 19.2 384H620.8c10.6 0 19.2 8.6 19.2 19.2c0 42.4-34.4 76.8-76.8 76.8H76.8C34.4 480 0 445.6 0 403.2zM281 209l-31 31 31 31c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-48-48c-9.4-9.4-9.4-24.6 0-33.9l48-48c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9zM393 175l48 48c9.4 9.4 9.4 24.6 0 33.9l-48 48c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l31-31-31-31c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0z\"/></svg>`{=html} Actividad {background-color=\"#0072B2\" transition=\"slide-in\"}\n\n-   Abrir el archivo `dplyr.qmd` que se encuentra en la carpeta `intro-r`\n-   Realizar la **Actividad**.\n\n<br>\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_ce3cc2b4\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Tidyverse y la ciencia de datos\n\n![El Tidyverse tiene multipes paquetes que nos ayudaran durante todo el proceso de analizar los datos. Tomado de @çetinkaya-rundel2023.](images/data-science_tidyverse.png){#data-science-2 fig-align=\"center\"}\n\n## Importando los datos\n\nHay varias maneras de importar los datos. Todo depende del formato en que estos se encuentren, aunque lo ideal es siempre tenerlos en formatos de texto plano: .csv, .tsv, txt.\n\n::: columns\n::: {.column .fragment width=\"50%\"}\n### Texto plano\n\n![](images/readr.png){fig-align=\"center\" width=\"250\"}\n\nHay varias funciones: `reardr::read_csv()`, `reardr::read_tsv()`, `reardr::read_csv2()`, `reardr::read_delim()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreardr::read_csv(\n  \"ruta/al/archivo/archivo.csv\"\n)\n```\n:::\n\n:::\n\n::: {.column .fragment width=\"50%\"}\n### Excel\n\n![](images/readxl.png){fig-align=\"center\" width=\"250\"}\n\nHay varias funciones: `readxl::()read_excel`, `readxl::()read_xls`, `readxl::()read_xlsx`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreadxl::read_excel(\n  \"ruta/al/archivo/archivo.xlsx\"\n)\n```\n:::\n\n:::\n:::\n\n## {background-color=\"black\" background-image=\"images/hay_tabla.jpg\" transition=\"slide-in\"}\n\n## Tablas\n\nHay varios paquetes para realizar tablas en R. Cada uno con enfoques, curvas de aprendizaje y formatos de salida diferentes. Una forma de agruparlos es si producen tablas estáticas o tablas dinámicas.\n\n![](images/r-packages-for-table-summary.png){fig-align=\"center}\n\n::: footer\n[2024 Table Contest](https://posit.co/blog/2024-table-contest-winners/)\n:::\n\n## Organizando los datos\n\nLa idea de una tabla es que sea informativa y legible, por lo cual es recomendable hacer una buena selección de los datos.\n\n::: {.fragment}\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2|3-7|8-11|12-14|15|17\"}\npenguins_resumen <- \n  palmerpenguins::penguins |> \n  dplyr::count(\n    species,\n    island,\n    sex\n  ) |> \n  dplyr::group_by(\n    species,\n    island\n  ) |> \n  dplyr::mutate(\n    percentage = n / sum(n) * 100\n  ) |> \n  dplyr::ungroup()\n\npenguins_resumen\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 13 × 5\n   species   island    sex        n percentage\n   <fct>     <fct>     <fct>  <int>      <dbl>\n 1 Adelie    Biscoe    female    22      50   \n 2 Adelie    Biscoe    male      22      50   \n 3 Adelie    Dream     female    27      48.2 \n 4 Adelie    Dream     male      28      50   \n 5 Adelie    Dream     <NA>       1       1.79\n 6 Adelie    Torgersen female    24      46.2 \n 7 Adelie    Torgersen male      23      44.2 \n 8 Adelie    Torgersen <NA>       5       9.62\n 9 Chinstrap Dream     female    34      50   \n10 Chinstrap Dream     male      34      50   \n11 Gentoo    Biscoe    female    58      46.8 \n12 Gentoo    Biscoe    male      61      49.2 \n13 Gentoo    Biscoe    <NA>       5       4.03\n```\n\n\n:::\n:::\n\n:::\n\n## `knitr::kable()` {.scrollable}\n\n`kable()` es un generador de tablas muy simple, y es simple por diseño. Sólo genera tablas para datos estrictamente rectangulares. No puede formatear mucho las celdas de la tabla ni combinar celdas. Algunas de las limitaciones de `knitr::kable()` pueden ser subsanadas utilizando el paquete `kableExtra`.\n\n::: {.fragment}\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2-12|13-18\"}\npenguins_resumen |> \n  dplyr::mutate(\n    species = base::paste0(\n      \"*\", species, \"*\"\n    ),\n    sex = dplyr::case_match(\n      sex,\n      \"female\" ~ \"Hembra\",\n      \"male\" ~ \"Macho\",\n      .default = sex\n    )\n  ) |> \n  knitr::kable(\n    col.names = c(\n      \"Especie\", \"Isla\", \"Sexo\", \"n\", \"Porcentaje (%)\"\n    ),\n    digits = c(2)\n  )\n```\n\n::: {.cell-output-display}\n\n\n|Especie     |Isla      |Sexo   |  n| Porcentaje (%)|\n|:-----------|:---------|:------|--:|--------------:|\n|*Adelie*    |Biscoe    |Hembra | 22|          50.00|\n|*Adelie*    |Biscoe    |Macho  | 22|          50.00|\n|*Adelie*    |Dream     |Hembra | 27|          48.21|\n|*Adelie*    |Dream     |Macho  | 28|          50.00|\n|*Adelie*    |Dream     |NA     |  1|           1.79|\n|*Adelie*    |Torgersen |Hembra | 24|          46.15|\n|*Adelie*    |Torgersen |Macho  | 23|          44.23|\n|*Adelie*    |Torgersen |NA     |  5|           9.62|\n|*Chinstrap* |Dream     |Hembra | 34|          50.00|\n|*Chinstrap* |Dream     |Macho  | 34|          50.00|\n|*Gentoo*    |Biscoe    |Hembra | 58|          46.77|\n|*Gentoo*    |Biscoe    |Macho  | 61|          49.19|\n|*Gentoo*    |Biscoe    |NA     |  5|           4.03|\n\n\n:::\n:::\n\n:::\n\n## `gt`\n\n`gt` permite construir una amplia variedad de tablas útiles con un conjunto cohesivo de partes de tabla.\n\n![](images/gt_parts_of_a_table.png){.r-stretch fig-align=\"center\"}\n\n## `gt` --- ejemplo\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2|3-10|11-14|15-18|19-25|26-29|30\"}\npenguins_resumen |> \n  gt::gt() |>\n  gt::tab_style(\n    style = gt::cell_text(\n      style = \"italic\"\n    ),\n    locations = gt::cells_body(\n      columns = species,\n    )\n  ) |> \n  gt::sub_values(\n    value = \"female\",\n    replacement = \"Hembra\"\n  ) |> \n  gt::sub_values(\n    value = \"male\",\n    replacement = \"Macno\"\n  ) |>\n  gt::cols_label(\n    species = \"Especie\", \n    island = \"Isla\", \n    sex = \"Sexo\", \n    n = \"n\", \n    percentage = \"Porcentaje (%)\"\n  ) |> \n  gt::fmt_number(\n    columns = \"percentage\",\n    decimals = 2\n  ) |> \n  gt::opt_stylize(style = 1)\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"ekzwckvqtd\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#ekzwckvqtd table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#ekzwckvqtd thead, #ekzwckvqtd tbody, #ekzwckvqtd tfoot, #ekzwckvqtd tr, #ekzwckvqtd td, #ekzwckvqtd th {\n  border-style: none;\n}\n\n#ekzwckvqtd p {\n  margin: 0;\n  padding: 0;\n}\n\n#ekzwckvqtd .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #004D80;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #004D80;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#ekzwckvqtd .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#ekzwckvqtd .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#ekzwckvqtd .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#ekzwckvqtd .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ekzwckvqtd .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n}\n\n#ekzwckvqtd .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #0076BA;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#ekzwckvqtd .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#ekzwckvqtd .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#ekzwckvqtd .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#ekzwckvqtd .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#ekzwckvqtd .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#ekzwckvqtd .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#ekzwckvqtd .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #0076BA;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#ekzwckvqtd .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #0076BA;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n  vertical-align: middle;\n}\n\n#ekzwckvqtd .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#ekzwckvqtd .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#ekzwckvqtd .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: none;\n  border-top-width: 1px;\n  border-top-color: #89D3FE;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #89D3FE;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #89D3FE;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#ekzwckvqtd .gt_stub {\n  color: #FFFFFF;\n  background-color: #0076BA;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #0076BA;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ekzwckvqtd .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#ekzwckvqtd .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#ekzwckvqtd .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#ekzwckvqtd .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ekzwckvqtd .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #0076BA;\n}\n\n#ekzwckvqtd .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#ekzwckvqtd .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n}\n\n#ekzwckvqtd .gt_grand_summary_row {\n  color: #333333;\n  background-color: #89D3FE;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ekzwckvqtd .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #0076BA;\n}\n\n#ekzwckvqtd .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #0076BA;\n}\n\n#ekzwckvqtd .gt_striped {\n  background-color: #F4F4F4;\n}\n\n#ekzwckvqtd .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #0076BA;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #0076BA;\n}\n\n#ekzwckvqtd .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ekzwckvqtd .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ekzwckvqtd .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#ekzwckvqtd .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#ekzwckvqtd .gt_left {\n  text-align: left;\n}\n\n#ekzwckvqtd .gt_center {\n  text-align: center;\n}\n\n#ekzwckvqtd .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#ekzwckvqtd .gt_font_normal {\n  font-weight: normal;\n}\n\n#ekzwckvqtd .gt_font_bold {\n  font-weight: bold;\n}\n\n#ekzwckvqtd .gt_font_italic {\n  font-style: italic;\n}\n\n#ekzwckvqtd .gt_super {\n  font-size: 65%;\n}\n\n#ekzwckvqtd .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#ekzwckvqtd .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#ekzwckvqtd .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#ekzwckvqtd .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#ekzwckvqtd .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#ekzwckvqtd .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#ekzwckvqtd .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#ekzwckvqtd .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#ekzwckvqtd div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"species\">Especie</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"island\">Isla</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_center\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"sex\">Sexo</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"n\">n</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\" id=\"percentage\">Porcentaje (%)</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Biscoe</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">Hembra</td>\n<td headers=\"n\" class=\"gt_row gt_right\">22</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">50.00</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center gt_striped\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center gt_striped\">Biscoe</td>\n<td headers=\"sex\" class=\"gt_row gt_center gt_striped\">Macno</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">22</td>\n<td headers=\"percentage\" class=\"gt_row gt_right gt_striped\">50.00</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Dream</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">Hembra</td>\n<td headers=\"n\" class=\"gt_row gt_right\">27</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">48.21</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center gt_striped\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center gt_striped\">Dream</td>\n<td headers=\"sex\" class=\"gt_row gt_center gt_striped\">Macno</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">28</td>\n<td headers=\"percentage\" class=\"gt_row gt_right gt_striped\">50.00</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Dream</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"n\" class=\"gt_row gt_right\">1</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">1.79</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center gt_striped\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center gt_striped\">Torgersen</td>\n<td headers=\"sex\" class=\"gt_row gt_center gt_striped\">Hembra</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">24</td>\n<td headers=\"percentage\" class=\"gt_row gt_right gt_striped\">46.15</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Torgersen</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">Macno</td>\n<td headers=\"n\" class=\"gt_row gt_right\">23</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">44.23</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center gt_striped\" style=\"font-style: italic;\">Adelie</td>\n<td headers=\"island\" class=\"gt_row gt_center gt_striped\">Torgersen</td>\n<td headers=\"sex\" class=\"gt_row gt_center gt_striped\">NA</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">5</td>\n<td headers=\"percentage\" class=\"gt_row gt_right gt_striped\">9.62</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Chinstrap</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Dream</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">Hembra</td>\n<td headers=\"n\" class=\"gt_row gt_right\">34</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">50.00</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center gt_striped\" style=\"font-style: italic;\">Chinstrap</td>\n<td headers=\"island\" class=\"gt_row gt_center gt_striped\">Dream</td>\n<td headers=\"sex\" class=\"gt_row gt_center gt_striped\">Macno</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">34</td>\n<td headers=\"percentage\" class=\"gt_row gt_right gt_striped\">50.00</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Gentoo</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Biscoe</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">Hembra</td>\n<td headers=\"n\" class=\"gt_row gt_right\">58</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">46.77</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center gt_striped\" style=\"font-style: italic;\">Gentoo</td>\n<td headers=\"island\" class=\"gt_row gt_center gt_striped\">Biscoe</td>\n<td headers=\"sex\" class=\"gt_row gt_center gt_striped\">Macno</td>\n<td headers=\"n\" class=\"gt_row gt_right gt_striped\">61</td>\n<td headers=\"percentage\" class=\"gt_row gt_right gt_striped\">49.19</td></tr>\n    <tr><td headers=\"species\" class=\"gt_row gt_center\" style=\"font-style: italic;\">Gentoo</td>\n<td headers=\"island\" class=\"gt_row gt_center\">Biscoe</td>\n<td headers=\"sex\" class=\"gt_row gt_center\">NA</td>\n<td headers=\"n\" class=\"gt_row gt_right\">5</td>\n<td headers=\"percentage\" class=\"gt_row gt_right\">4.03</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::\n\n\n## `flextable`\n\n`flextable` proporciona un marco para crear fácilmente tablas para informes y publicaciones. Un objeto `flextable` es una representación data.frame compuesto por tres partes (header, body, footer). El paquete proporciona funciones que permiten controlar estas tres partes y texto, párrafos, celdas,formato de borde de cualquier elemento y valores mostrados.\n\n![](images/flextable_layout.png){fig-align=\"center\"}\n\n## `flextable` --- ejemplo\n\n\n::: {.cell output-location='column-fragment'}\n\n```{.r .cell-code  code-line-numbers=\"|1|2|3-6|7-11|12-16|17-22|23-25|26-29|30|31\"}\npenguins_resumen |> \n  flextable::flextable() |> \n  flextable::mk_par(\n    j = \"species\",\n    value = flextable::as_paragraph(flextable::as_i(species)),\n  ) |>\n  flextable::mk_par(\n    i = ~ sex == \"female\",\n    j = \"sex\",\n    value = flextable::as_paragraph(\"Hembra\")\n  ) |> \n  flextable::mk_par(\n    i = ~ sex == \"male\",\n    j = \"sex\",\n    value = flextable::as_paragraph(\"Macho\")\n  ) |> \n  flextable::set_header_labels(\n    species = \"Especie\",\n    island = \"Isla\",\n    sex = \"Sexo\",\n    percentage = \"Porcentaje (%)\"\n  ) |> \n  flextable::merge_v(\n    j = c(\"species\", \"island\")\n  ) |> \n  flextable::colformat_char(\n    j = \"sex\",\n    na_str = \"NA\",\n  ) |> \n  flextable::theme_apa() |> \n  flextable::autofit()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"tabwid\"><style>.cl-941e7006{}.cl-9414ce0c{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:normal;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-9414ce20{font-family:'Times New Roman';font-size:11pt;font-weight:normal;font-style:italic;text-decoration:none;color:rgba(0, 0, 0, 1.00);background-color:transparent;}.cl-9418cbce{margin:0;text-align:center;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);padding-bottom:5pt;padding-top:5pt;padding-left:5pt;padding-right:5pt;line-height: 2;background-color:transparent;}.cl-9418e5b4{width:0.896in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5be{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5c8{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5d2{width:0.438in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5d3{width:1.197in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0.75pt solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5dc{width:0.896in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5e6{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5f0{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5f1{width:0.438in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e5fa{width:1.197in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e604{width:0.896in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e605{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e60e{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e60f{width:0.438in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e618{width:1.197in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e622{width:0.896in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e623{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e62c{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e62d{width:0.438in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e636{width:1.197in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e640{width:0.896in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e641{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e64a{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e64b{width:0.438in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e654{width:1.197in;background-color:transparent;vertical-align: middle;border-bottom: 0 solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e655{width:0.896in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e65e{width:0.905in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e65f{width:0.701in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e672{width:0.438in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}.cl-9418e673{width:1.197in;background-color:transparent;vertical-align: middle;border-bottom: 0.75pt solid rgba(0, 0, 0, 1.00);border-top: 0 solid rgba(0, 0, 0, 1.00);border-left: 0 solid rgba(0, 0, 0, 1.00);border-right: 0 solid rgba(0, 0, 0, 1.00);margin-bottom:0;margin-top:0;margin-left:0;margin-right:0;}</style><table data-quarto-disable-processing='true' class='cl-941e7006'><thead><tr style=\"overflow-wrap:break-word;\"><th class=\"cl-9418e5b4\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Especie</span></p></th><th class=\"cl-9418e5be\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Isla</span></p></th><th class=\"cl-9418e5c8\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Sexo</span></p></th><th class=\"cl-9418e5d2\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">n</span></p></th><th class=\"cl-9418e5d3\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Porcentaje (%)</span></p></th></tr></thead><tbody><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"8\"class=\"cl-9418e5dc\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce20\">Adelie</span></p></td><td  rowspan=\"2\"class=\"cl-9418e5e6\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Biscoe</span></p></td><td class=\"cl-9418e5f0\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">female</span></p></td><td class=\"cl-9418e5f1\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">22</span></p></td><td class=\"cl-9418e5fa\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e5f0\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">male</span></p></td><td class=\"cl-9418e5f1\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">22</span></p></td><td class=\"cl-9418e5fa\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-9418e5e6\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Dream</span></p></td><td class=\"cl-9418e5f0\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">female</span></p></td><td class=\"cl-9418e5f1\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">27</span></p></td><td class=\"cl-9418e5fa\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">48.21</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e5f0\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">male</span></p></td><td class=\"cl-9418e5f1\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">28</span></p></td><td class=\"cl-9418e5fa\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e60e\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">NA</span></p></td><td class=\"cl-9418e60f\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">1</span></p></td><td class=\"cl-9418e618\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">1.79</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-9418e623\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Torgersen</span></p></td><td class=\"cl-9418e62c\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">female</span></p></td><td class=\"cl-9418e62d\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">24</span></p></td><td class=\"cl-9418e636\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">46.15</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e62c\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">male</span></p></td><td class=\"cl-9418e62d\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">23</span></p></td><td class=\"cl-9418e636\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">44.23</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e62c\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">NA</span></p></td><td class=\"cl-9418e62d\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">5</span></p></td><td class=\"cl-9418e636\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">9.62</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"2\"class=\"cl-9418e640\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce20\">Chinstrap</span></p></td><td  rowspan=\"2\"class=\"cl-9418e641\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Dream</span></p></td><td class=\"cl-9418e64a\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">female</span></p></td><td class=\"cl-9418e64b\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">34</span></p></td><td class=\"cl-9418e654\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e64a\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">male</span></p></td><td class=\"cl-9418e64b\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">34</span></p></td><td class=\"cl-9418e654\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">50.00</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td  rowspan=\"3\"class=\"cl-9418e655\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce20\">Gentoo</span></p></td><td  rowspan=\"3\"class=\"cl-9418e65e\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">Biscoe</span></p></td><td class=\"cl-9418e5f0\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">female</span></p></td><td class=\"cl-9418e5f1\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">58</span></p></td><td class=\"cl-9418e5fa\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">46.77</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e5f0\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">male</span></p></td><td class=\"cl-9418e5f1\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">61</span></p></td><td class=\"cl-9418e5fa\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">49.19</span></p></td></tr><tr style=\"overflow-wrap:break-word;\"><td class=\"cl-9418e65f\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">NA</span></p></td><td class=\"cl-9418e672\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">5</span></p></td><td class=\"cl-9418e673\"><p class=\"cl-9418cbce\"><span class=\"cl-9414ce0c\">4.03</span></p></td></tr></tbody></table></div>\n```\n\n:::\n:::\n\n\n## Recursos\n-   [1 dataset. 100 visualizations](https://100.datavizproject.com)\n-   [Cleaning Biodiversity Data in R](https://cleaning-data-r.ala.org.au)\n-   [Data Viz Project](https://datavizproject.com/)\n-   [From Data to Viz](https://www.data-to-viz.com)\n-   [ggplot2: Elegant Graphics for Data Analysis (3e)](https://ggplot2-book.org/index.html)\n-   [gt](https://gt.rstudio.com)\n-   [Hands-On Programming with R](https://jjallaire.github.io/hopr/)\n-   [R Cookbook, 2nd Edition](https://rc2e.com)\n-   [R for Data Science (2e)](https://r4ds.hadley.nz)\n-   [R for Plant Disease Epidemiology](https://r4pde.netlify.app)\n-   [R Graphics Cookbook, 2nd edition](https://r-graphics.org)\n-   [The R Graph Gallery](https://r-graph-gallery.com/index.html)\n-   [Tidyverse](https://www.tidyverse.org)\n-   [Using the flextable R package](https://ardata-fr.github.io/flextable-book/index.html)\n\n# `<svg aria-hidden=\"true\" role=\"img\" viewBox=\"0 0 640 512\" style=\"height:1em;width:1.25em;vertical-align:-0.125em;margin-left:auto;margin-right:auto;font-size:inherit;fill:white;overflow:visible;position:relative;\"><path d=\"M96 64c0-17.7 14.3-32 32-32H448h64c70.7 0 128 57.3 128 128s-57.3 128-128 128H480c0 53-43 96-96 96H192c-53 0-96-43-96-96V64zM480 224h32c35.3 0 64-28.7 64-64s-28.7-64-64-64H480V224zM32 416H544c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32z\"/></svg>`{=html} Pausa {background-color=\"#000000\" transition=\"slide-in\"}\n\n<br>\n\n<br>\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_f85b44f0\" data-update-every=\"1\" data-play-sound=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:2em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n## Referencias {visibility=\"uncounted\"}\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/tabwid-1.1.3/tabwid.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/tabwid-1.1.3/tabwid.js\"></script>\n<link href=\"../../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}